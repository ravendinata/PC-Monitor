<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAWlSURBVHhe7Zrbb1RVFMY7vUAtrRR6pZc/widfqeKdSwUpqIjQKF6wMaiQVk1UohhipAWDUdp6
        gShWgjZI0YSoMYpKYowxUaMPivGGL33lcTvfZJUzu/MxzJyZdc7kuH7JL6Gdvedb5xvSntnTKsMwDMMw
        DMMwDMMwDMMwDMMwjPlMf3LGmZdWatKDhZqBUpMeLNQMlJr0YKFmoNSkBws1A6UmPVioGSg16cFCYdWq
        5f8rWQdQatKDhUI2ZJJlHUCpSQ8WCtmQSZZ1AKUmPVgoZEMmWdYBlJr0YKGQDVmqC4Y2uLrtA/SxuGUd
        QKlJDxYK2ZAluXq56/h60rWfGU//u4+viVHWAZSa9GChkA1Zik1jj7ref09lbNh9P10Tp6wDKDXpwUIh
        GzKsNZtWuu5z7198Abp+mnKp266ja+OSdQClJj1YKGRDhrX1w7GL5c+5ePJJujYuWQdQatKDhUI2ZBjr
        Hx/MKR/2/HnC1W7tp3vikHUApSY9WChkQxZrat0Kt+yHt+kLAFtPjdF9ccg6gFKTHiwUsiGLtfnIM17h
        PX+f9L6G9Ts3071RyzqAUpMeLBSyIYux7oH16cI/8MpetHfIdXw14X2v87sjLtV/LX2OKGUdQKlJDxYK
        2ZAFi3v+L8e9otu/OJS5/1/w0AbX+8+M91hj+haVPk+Esg6g1KQHC4VsyEJtHH3EK7g3/aOn7sHgHfDS
        Y897j3f/+p6rvv0m7zmilnUApSY9WChkQxZizaZbXPdvwT0/xO+C7DXVG29Ml37cW7Nkao+3JmpZB1Bq
        0oOFQjZkIbbM7POK7frlmKseuCFnXePoDm9d7/kZt2BoY866qGQdQKlJDxYK2ZCXs35kq19q2obd99G1
        VWv6XOc3b3hr4zwnYh1AqUkPFgqziwlr26cv04udc+GOOzP/87P3FHNOVDvYn3lDl70/jB1nX6cdQKlJ
        DxYK2aDFiHv+2nvX0uKybTnxorevmHOi1tMveXvDmsgXoNCznswv7XPTRe+94qlt3p5STNwLUOxpZ9PB
        Xd7+y50TZY44fjzq7SnFinwB2IVrmeq/JvOOOLuUfOdEzW8+7a3NvGCDa+jaQmUdQKlJDxYK2ZCa1u/a
        4pUK64e35Kyr27Yu54jjyldHctYVK+sASk16sFDIhtS29aP9XrHsnKjts1e8Ncu+f8ul1q7w1oSRdQCl
        Jj1YKGRDaltz9yrX84d/W5l9TtTw3HbvMYjPG7KfI6ysAyg16cFCIRsyChePP+EVPHdOVD1wvev6+V3v
        sZaT++hzhJF1AKUmPVgoZENGIX6czP8QB+dES44+632v5/dpV7N5JX2OMLIOoNSkBwuFbMiozLnHx/H1
        vCPspgM76d6wsg6g1KQHC4VsyCht+/igV3i2nd8eLvuHOKwDKDXpwUIhGzJKa++51fX85d9uZjw/4xY+
        dhfdU4qsAyg16cFCIRsyapsP+2+44NLje+naUmUdQKlJDxYK2ZBRm1rv3/lk7ojuuJmuLVXWAZSa9GCh
        kA0Zh4v2BPf+jS88TNeUQ9YBlJr0YKGQDRmLq/tc++eHXMfZycyH/XRNGWQdQKlJDxYK2ZBxiT9px19T
        sMfKJesASk16sFDIhkyyrAMoNenBQiEbMsmyDqDUpAcLhWzIJMs6gFKTHiwUsiGTLOsASk16sFAzUGrS
        g4WagVKTHizUDJSa9GChZqDUpAcLNQOlJj1YqBkoNenBQs1AqUkPFmoGSk3JY3hswhWjbDPKBSs5n7LN
        KBes5HzKNqNcsJLzKduMcsFKzqdsM8oFKzmfss3IZmTstauH94+fThc0O7+wCnAWs2FGGTdZDB+YuCp9
        kRfmXXQlegGzytjJYWR0fIpcbKX6joydHNIXVYk/di7lrIydHMhFVrQydnJgF1nJytiGYRiGYRiGYRiG
        YRiGYRhGGaiq+g8yFhiPDeiNugAAAABJRU5ErkJggg==
</value>
  </data>
</root>